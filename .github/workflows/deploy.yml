name: CD

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout to repo
      - uses: actions/checkout@v2
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
          –application-name nodeblog_application \
          –deployment-group-name nodeblog_deployment \
          –deployment-config-name CodeDeployDefault.OneAtATime \
          –github-location repository=${{ github.repository }},commitId=${{ github.sha }}
      
#         uses: actions/checkout@v2
      
# #       - name: Set up Node
# #         uses: actions/setup-node@v2
# #         with:
# #           node-version: '14'
          
# #       - name: Create or restore cache
# #         uses: actions/cache@v2
# #         id: cache
# #         with: 
# #           path: client/node_modules
# #           key: ${{  runner.os }}-node-${{ hashFiles('**/client/package-lock.json') }}
# #           restore-keys: |
# #             ${{  runner.os }}-node-
          
#       - name: Create .env file    
#         run: |
#           touch .env
#           echo PORT=5000 >> .env
#           echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
#           cat .env
          
#       - name: Install node dependencies
#         run: npm install
      
#       - name: Install react dependencies
# #         if: steps.cache.outputs.cache-hit != 'true'
#         run: |
#           cd client
#           npm install
        
#       - name: Build  
#         run: npm run build
      
#       - name: Restart pm2
#         run: |
#           pm2 stop 0
#           pm2 start 0
#           pm2 save
